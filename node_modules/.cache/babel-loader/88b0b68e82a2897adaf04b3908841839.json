{"ast":null,"code":"import _slicedToArray from \"/home/devita/homework/tic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devita/homework/tic/src/Game/Board.js\";\nimport React from 'react';\nimport './Board.css'; // class Square extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: null\n//         }\n//     }\n//     render() {\n//         return (\n//             <button \n//                 className=\"square\" \n//                 onClick={\n//                     () => {\n//                     this.props.onClick()\n//                     }\n//                 }\n//             >\n//                 {this.props.value}\n//             </button>\n//         )\n//     }\n// }\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    // const winner = calculateWinner(this.state.squares)\n    // console.log('squares: ', this.state.squares)\n    // let status; \n    // if (winner) {\n    //     status = 'Winner: ' + winner;\n    // } else {\n    //     status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n    // }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/devita/homework/tic/src/Game/Board.js"],"names":["React","Square","props","onClick","value","Board","Component","renderSquare","i","state","squares","handleClick","render","Game","constructor","history","Array","fill","xIsNext","current","length","slice","calculateWinner","setState","concat","winner","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Board.css'\n\n// class Square extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: null\n//         }\n//     }\n\n//     render() {\n//         return (\n//             <button \n//                 className=\"square\" \n//                 onClick={\n//                     () => {\n//                     this.props.onClick()\n//                     }\n//                 }\n//             >\n//                 {this.props.value}\n//             </button>\n//         )\n//     }\n// }\n\nfunction Square(props) {\n    return (\n        <button \n            className=\"square\" \n            onClick={\n                props.onClick\n            }\n        >\n            {props.value}\n        </button>\n    )\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square \n        value={this.state.squares[i]} \n        onClick={() => this.handleClick(i)}\n        />\n    }\n\n    render() {\n        // const winner = calculateWinner(this.state.squares)\n        // console.log('squares: ', this.state.squares)\n        // let status; \n        // if (winner) {\n        //     status = 'Winner: ' + winner;\n        // } else {\n        //     status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n        // }\n\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null),\n          }],\n          xIsNext: true,\n        };\n      }\n    \n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n                squares: squares,\n            }]),\n          xIsNext: !this.state.xIsNext,\n        });\n      }\n\n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = calculateWinner(current.squares);\n    \n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n    \n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                <Board\n                    squares={current.squares}\n                    onClick={(i) => this.handleClick(i)}\n                />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol></ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ]\n\n    for (let i=0; i<lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n    }\n    return null\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}